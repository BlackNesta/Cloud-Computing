
div
  div.street-view-iframe
    iframe.iframe1(width='50%' height='80%' style='border:0;float:left' loading='lazy' src='https://www.google.com/maps/embed/v1/streetview?location=46.64076,27.7276&key=#{api_key}')
    script.


  div.street-view-iframe
    style(type='text/css').
      #map {
      height: 60%;
      width: 50%;
      float:right;
      }
    script.
      // In the following example, markers appear when the user clicks on the map.
      // The markers are stored in an array.
      // The user can then click an option to hide, show or delete the markers.
      let map;
      let markers = [];
      function initMap() {
      const haightAshbury = { lat: 0, lng: 0 };
      map = new google.maps.Map(document.getElementById("map"), {
      zoom: 1,
      center: haightAshbury,
      mapTypeId: "terrain",
      });
      // This event listener will call addMarker() when the map is clicked.
      map.addListener("click", (event) => {
      addMarker(event.latLng);
      });
      }
      // Adds a marker to the map and push to the array.
      function addMarker(location) {
      deleteMarkers()
      const marker = new google.maps.Marker({
      position: location,
      map: map,
      });
      markers.push(marker);
      }
      // Sets the map on all markers in the array.
      function setMapOnAll(map) {
      for (let i = 0; i < markers.length; i++) {
      markers[i].setMap(map);
      }
      }
      // Removes the markers from the map, but keeps them in the array.
      function clearMarkers() {
      setMapOnAll(null);
      }
      // Shows any markers currently in the array.
      function showMarkers() {
      setMapOnAll(map);
      }
      // Deletes all markers in the array by removing references to them.
      function deleteMarkers() {
      clearMarkers();
      markers = [];
      }

    #map
    // Async script executes immediately and must be after any DOM elements used in callback.

div(style='float:left')
  form#subform
    .form-group
      .g-recaptcha(data-sitekey='6LcBwZMaAAAAAKjWRF2sFdqpA08XnWZCfvujdK_J')
    input.btn.btn-primary(type='submit' value='Submit')
    script.
      document.getElementById('subform').onsubmit= function(e){
        e.preventDefault();
        var formData = new FormData(document.getElementById("subform"));
        var captchaResp = formData.get("g-recaptcha-response");
        console.log(captchaResp);
      }
script(src = 'https://maps.googleapis.com/maps/api/js?key=#{api_key}&callback=initMap&libraries=&v=weekly' async = '')
link(href = 'https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css' rel = 'stylesheet' integrity = 'sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6' crossorigin = 'anonymous')
script(src = 'https://www.google.com/recaptcha/enterprise.js' async = '' defer = '')