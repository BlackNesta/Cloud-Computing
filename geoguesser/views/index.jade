
div.street-view-iframe
    iframe.iframe1(width='50%' height='50%' style='border:0' loading='lazy' src='https://www.google.com/maps/embed/v1/streetview?location=46.6407,27.7276&key=#{api_key}')

div.map-component
  script(src='https://polyfill.io/v3/polyfill.min.js?features=default')
  style(type='text/css').
    #map {
    height: 50%;
    width: 30%;
    }
  script.
    // In the following example, markers appear when the user clicks on the map.
    // The markers are stored in an array.
    // The user can then click an option to hide, show or delete the markers.
    let map;
    let markers = [];
    function initMap() {
    const haightAshbury = { lat: 0, lng: 0 };
    map = new google.maps.Map(document.getElementById("map"), {
    zoom: 1,
    center: haightAshbury,
    mapTypeId: "terrain",
    });
    // This event listener will call addMarker() when the map is clicked.
    map.addListener("click", (event) => {
    addMarker(event.latLng);
    });
    }
    // Adds a marker to the map and push to the array.
    function addMarker(location) {
    deleteMarkers()
    const marker = new google.maps.Marker({
    position: location,
    map: map,
    });
    markers.push(marker);
    }
    // Sets the map on all markers in the array.
    function setMapOnAll(map) {
    for (let i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
    }
    }
    // Removes the markers from the map, but keeps them in the array.
    function clearMarkers() {
    setMapOnAll(null);
    }
    // Shows any markers currently in the array.
    function showMarkers() {
    setMapOnAll(map);
    }
    // Deletes all markers in the array by removing references to them.
    function deleteMarkers() {
    clearMarkers();
    markers = [];
    }

  #map
  // Async script executes immediately and must be after any DOM elements used in callback.
  script(src='https://maps.googleapis.com/maps/api/js?key=#{api_key}&callback=initMap&libraries=&v=weekly' async='')
